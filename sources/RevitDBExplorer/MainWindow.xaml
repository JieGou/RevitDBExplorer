<Window x:Class="RevitDBExplorer.MainWindow"
        x:ClassModifier="internal"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:componentQueryVisualization="clr-namespace:RevitDBExplorer.UIComponents.QueryVisualization"
        xmlns:componentBusyIndicator="clr-namespace:RevitDBExplorer.UIComponents.BusyIndicator"
        xmlns:componentList="clr-namespace:RevitDBExplorer.UIComponents.List"
        xmlns:componentExplorerTree="clr-namespace:RevitDBExplorer.UIComponents.Trees.Explorer"    
        xmlns:componentUtilityTree="clr-namespace:RevitDBExplorer.UIComponents.Trees.Utility" 
        xmlns:componentCAndC="clr-namespace:RevitDBExplorer.UIComponents.CommandAndControl"    
        xmlns:componentScripting="clr-namespace:RevitDBExplorer.UIComponents.Scripting"    
        xmlns:componentBreadcrumbs="clr-namespace:RevitDBExplorer.UIComponents.Breadcrumbs"    
        xmlns:converters="clr-namespace:RevitDBExplorer.WPF.Converters"       
        xmlns:controls="clr-namespace:RevitDBExplorer.WPF.Controls" 
        xmlns:ext="clr-namespace:RevitDBExplorer.WPF.MarkupExtensions"    
        xmlns:wpf="clr-namespace:RevitDBExplorer.WPF"
        xmlns:ap="clr-namespace:RevitDBExplorer.WPF.AttachedProperties"
        mc:Ignorable="d"
        WindowStartupLocation="CenterOwner"
        Title="Revit database explorer and editor"
        MinHeight="353" Height="{ext:SettingBinding MainWindowHeight}"
        MinWidth="599" Width="{ext:SettingBinding MainWindowWidth}" 
        Icon="/RevitDBExplorer;component/Resources/RDBE.ico" 
        Closed="Window_Closed"
        Closing="Window_Closing"
        KeyDown="Window_KeyDown" 
        SizeChanged="Window_SizeChanged"      
        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
        TextOptions.TextFormattingMode="Display"        
        >
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/Templates/All.xaml"/>
                <wpf:ThemeResourceDictionary Name="Colors"/>
                <ResourceDictionary Source="Resources/VectorGraphic.xaml"/>
            </ResourceDictionary.MergedDictionaries>           
            
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverterCollapsed" WhenFalse="Collapsed"/>            
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverterCollapsedInverted" WhenFalse="Visible" WhenTrue="Collapsed"/>
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverterHidden" WhenFalse="Hidden"/>
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverterHiddenInverted" WhenFalse="Visible" WhenTrue="Hidden"/>
            <converters:EnumMatchToVisibilityConverter x:Key="EnumMatchToVisibilityConverter"/>
        </ResourceDictionary>
    </Window.Resources>

    <!--<Window.ContextMenu>
        <ContextMenu>            
            <MenuItem Header="Configuration" Click="Window_MenuItem_ConfigurationClick" />
        </ContextMenu>
    </Window.ContextMenu>-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" MinHeight="200"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="0" />
        </Grid.RowDefinitions>

        <Grid Margin="2 2 2 0" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{ext:SettingBinding FirstColumnWidth}" MinWidth="100" x:Name="cFirstColumnDefinition" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" MinWidth="100"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>                
                <RowDefinition Height="*"  />
                <RowDefinition Height="21"/>
            </Grid.RowDefinitions>

            <UniformGrid Grid.ColumnSpan="3" Columns="12" Margin="0 0 0 2" >
                <UniformGrid.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Padding" Value="3 3 3 3"/>
                        <Setter Property="Margin" Value="2 0 2 0"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="ToolTipService.InitialShowDelay" Value="100"/>
                        <Style.Triggers>                            
                            <DataTrigger Binding="{Binding IsWiderThan800px}" Value="True">
                                <Setter Property="Padding" Value="3 3 3 0"/>
                            </DataTrigger>
                        </Style.Triggers>                        
                    </Style>
                    <Style TargetType="TextBlock" >                       
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsWiderThan800px}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsWiderThan800px}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </UniformGrid.Resources>

                <Button Click="SelectorButton_Click" Tag="CurrentSelection" Margin="0 0 2 0" ToolTip="Snoop already selected elements in Revit; if none selected, snoop all elements from active view">
                    <StackPanel>
                        <Path Style="{StaticResource IconSelection}"  />
                        <TextBlock Margin="0 0 0 0">Selection/Visible</TextBlock>
                    </StackPanel>
                </Button>
                <Button Click="SelectorButton_Click" Tag="Db" ToolTip="Snoop Database - all elements returned from FilteredElementCollector" >
                    <StackPanel>
                        <Path DockPanel.Dock="Top" Style="{StaticResource IconDb}"  />
                        <TextBlock Margin="0 2 0 0">Database</TextBlock>
                    </StackPanel>
                </Button>
                <Button Click="SelectorButton_Click" Tag="ActiveView" ToolTip="Snoop active view, &#x0a;&#x0a;source: commandData.Application.ActiveUIDocument.Document.ActiveView">
                    <StackPanel>
                        <Path Style="{StaticResource IconActiveView}" />
                        <TextBlock Margin="0 4 0 0">View</TextBlock>
                    </StackPanel>
                </Button>
                <Button Click="SelectorButton_Click" Tag="ActiveDocument" ToolTip="Snoop active document, &#x0a;&#x0a;source: commandData.Application.ActiveUIDocument.Document">
                    <StackPanel>
                        <Path Style="{StaticResource IconActiveDocument}" />
                        <TextBlock>Document</TextBlock>
                    </StackPanel>
                </Button>
                <Button Click="SelectorButton_Click" Tag="Application" ToolTip="Snoop application, &#x0a;&#x0a;source: commandData.Application.Application">
                    <StackPanel>
                        <Path Style="{StaticResource IconApplication}" />
                        <TextBlock>Application</TextBlock>
                    </StackPanel>
                </Button>
                <!--<Button Click="SelectorButton_Click" Tag="PickFace" ToolTip="Snoop by selecting face in Revit">
                    <StackPanel>
                        <Path Style="{StaticResource IconPickFace}" />
                        <TextBlock Margin="0 2 0 0">Face</TextBlock>
                    </StackPanel>
                </Button>-->
                <Button ap:ButtonAP.OpenSubMenuOnClick="True" ToolTip="Snoop by picking given object type in Revit">
                    <StackPanel>
                        <Path Style="{StaticResource IconPickEdge}"  />
                        <TextBlock Margin="0 2 0 0">Pick</TextBlock>
                    </StackPanel>
                    <Button.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Snoop face" Click="SelectorButton_Click" Tag="PickFace" ToolTip="Snoop by selecting face in Revit"/>
                            <MenuItem Header="Snoop edge" Icon="" Click="SelectorButton_Click" Tag="PickEdge" ToolTip="Snoop by selecting edge in Revit"/>
                            <!--<MenuItem Header="Snoop point on element" Icon="" Click="SelectorButton_Click" Tag="PickPoint" ToolTip="Snoop by selecting point in Revit"/>
                            <MenuItem Header="Snoop subelement" Icon="" Click="SelectorButton_Click" Tag="PickSubelement" ToolTip="Snoop by selecting subelement in Revit"/>-->
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>
                <Button Click="SelectorButton_Click" Tag="LinkedElement" ToolTip="Snoop by selecting linked element in Revit">
                    <StackPanel>
                        <Path Style="{StaticResource IconLinkedElement}" />
                        <TextBlock Margin="0 2 0 0">Linked</TextBlock>
                    </StackPanel>
                </Button>               
                <Button Click="SelectorButton_Click" Tag="Schemas" ToolTip="Snoop Extensible Storage framework schemas located in memory">
                    <StackPanel>
                        <Path Style="{StaticResource IconSchemas}" />
                        <TextBlock Margin="0 0 0 0">Storage</TextBlock>
                    </StackPanel>
                </Button>
                <Button Click="SelectorButton_Click"  Tag="FilterableCategories" ToolTip="Snoop categories that may be used in a ParameterFilterElement">
                    <StackPanel>
                        <Path Style="{StaticResource IconCategories}" SnapsToDevicePixels="True" />
                        <TextBlock Margin="0 0 0 0">Categories</TextBlock>
                    </StackPanel>
                </Button>
                <Button ap:ButtonAP.OpenSubMenuOnClick="True" ToolTip="Snoop Forge types">
                    <StackPanel>
                        <Path Style="{StaticResource IconForge}" />
                        <TextBlock Margin="0 6 0 0">Forge</TextBlock>
                    </StackPanel>
                    <Button.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="ParameterUtils.GetAllBuiltInGroups()" Click="SelectorButton_Click" Tag="ForgeParameterUtilsGetAllBuiltInGroups"/>
                            <MenuItem Header="ParameterUtils.GetAllBuiltInParameters()" Click="SelectorButton_Click" Tag="ForgeParameterUtilsGetAllBuiltInParameters"/>
                            <MenuItem Header="UnitUtils.GetAllMeasurableSpecs()" Click="SelectorButton_Click" Tag="ForgeUnitUtilsGetAllMeasurableSpecs"/>
                            <MenuItem Header="UnitUtils.GetAllUnits()" Click="SelectorButton_Click" Tag="ForgeUnitUtilsGetAllUnits"/>
                            <MenuItem Header="UnitUtils.GetAllDisciplines()" Click="SelectorButton_Click" Tag="ForgeUnitUtilsGetAllDisciplines"/>
                            <MenuItem Header="SpecUtils.GetAllSpecs()" Click="SelectorButton_Click" Tag="ForgeSpecUtilsGetAllSpecs"/>
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>
                <Button Click="SnoopEvents_Click"  ToolTip="Snoop events">
                    <StackPanel>
                        <Path Style="{StaticResource IconEvent}" SnapsToDevicePixels="True" />
                        <TextBlock Margin="0 0 0 0">Events</TextBlock>
                    </StackPanel>
                </Button>
                <Button ap:ButtonAP.OpenSubMenuOnClick="True"  Margin="2 0 0 0" ToolTip="Snoop addins">
                    <StackPanel>
                        <Path Style="{StaticResource IconAddin}" />
                        <TextBlock Margin="0 2 0 0">Addins</TextBlock>
                    </StackPanel>
                    <Button.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Snoop loaded external applications" Click="SelectorButton_Click" Tag="LoadedApplications" ToolTip="UIApplication.LoadedApplications"/>
                            <MenuItem Header="Snoop updaters applicable to the given document" Icon="" Click="SelectorButton_Click" Tag="Updaters" ToolTip="UpdaterRegistry.GetRegisteredUpdaterInfos()"/>
                            <MenuItem Header="Snoop external services" Icon="" Click="SelectorButton_Click" Tag="ExternalServices" ToolTip="ExternalServiceRegistry.GetServices()"/>
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>
            </UniformGrid>

            <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Margin="0 3 0 3" >
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <controls:TextBoxWithPlaceholder Text="{Binding DatabaseQuery, Mode=TwoWay, Delay=1000, UpdateSourceTrigger=PropertyChanged}" 
                                                 AutocompleteItemProvider="{Binding DatabaseQueryAutocompleteItemProvider}"
                                                 IsPopupOpen="{Binding IsPopupOpen}"
                                                 Placeholder="Query Revit database with RDQ">
                                                 <!--ToolTip="{Binding DatabaseQueryToolTip}"
                                                 ToolTipService.ShowDuration="50000"-->
                                                 
                    <!--<controls:TextBoxWithPlaceholder.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="ApplicationCommands.Copy" />
                            <MenuItem Command="ApplicationCommands.Cut" />
                            <MenuItem Command="ApplicationCommands.Paste" />
                            <Separator/>
                            <MenuItem Header ="Copy generated C# syntax" Tag="Default" Click="TextBox_MenuItem_CopyFilteredElementCollector"/>
                        </ContextMenu>
                    </controls:TextBoxWithPlaceholder.ContextMenu>-->
                </controls:TextBoxWithPlaceholder>

                <Button Grid.Column="1" BorderBrush="Transparent" Margin="2 0 0 0" MinWidth="21" MinHeight="21" Padding="2 0 1 1" ToolTip="Save query as favorite" Background="Transparent"  Command="{Binding SaveQueryAsFavoriteCommand}">
                    <Path Style="{StaticResource IconFavorite}"  Width="18"/>
                </Button>

                <Button Grid.Column="2" BorderBrush="Transparent" Margin="2 0 0 0" MinWidth="21" MinHeight="21" Padding="2 0 1 1" ToolTip="Generate C# code for this SELECT query (RDS)" Background="Transparent"  Command="{Binding OpenScriptingWithQueryCommand}">
                    <Path Style="{StaticResource IconQuery}" Width="12" />
                </Button>

                <componentQueryVisualization:QueryVisualizationView  Grid.Row="1" Grid.ColumnSpan="2" Margin="0 1 0 0" DataContext="{Binding QueryVisualization}"/>
            </Grid>

            <DockPanel Grid.Row="2" Grid.Column="0" Margin="0 0 2 0" SizeChanged="Window_SizeChanged">
                <Border DockPanel.Dock="Bottom" BorderThickness="0 1 0 0" BorderBrush="{DynamicResource GridSplitter.Background}" Height="auto" MaxHeight="444">
                    <Grid  Height="auto" Margin="0 1 0 1">
                        <componentUtilityTree:UtilityTreeView DataContext="{Binding UtilityTree}" />
                    </Grid>
                </Border>
                <componentExplorerTree:ExplorerTreeView DataContext="{Binding ExplorerTree}"  />
            </DockPanel>

            <GridSplitter Grid.Row="2" Grid.Column="1"  Background="{DynamicResource GridSplitter.Background}"  Width="2" Margin="0 25 2 5" HorizontalAlignment="Left" VerticalAlignment="Stretch" />

            <Grid Grid.Row="2" Grid.Column="2"  Margin="-2 0 0 0">
                <componentList:ListView DataContext="{Binding List}" Visibility="{Binding DataContext.RightView, Converter={StaticResource EnumMatchToVisibilityConverter}, ConverterParameter=List, RelativeSource={RelativeSource AncestorType=Grid}}"/>
               
                <componentList:CompareAndPinToolInfo Visibility="{Binding DataContext.RightView, Converter={StaticResource EnumMatchToVisibilityConverter}, ConverterParameter=CompareAndPinToolInfo, RelativeSource={RelativeSource AncestorType=Grid}}"/>
            </Grid>

            <componentBusyIndicator:BusyIndicator Grid.Row="2" Grid.Column="0" Grid.RowSpan="2" HorizontalAlignment="Left" Panel.ZIndex="1" VerticalAlignment="Bottom"  Height="21" Padding="0 0 4 0"  Margin="0 0 0 0" 
                                                  Background="{DynamicResource StatusBar.Background}"
                                                  Visibility="{Binding IsRevitBusy, Converter={StaticResource BoolToVisibilityConverter}}" />

            <Grid Background="{DynamicResource StatusBar.Background}" Margin="-2 0 0 0" Grid.ColumnSpan="3" Grid.Row="3">
                <Grid.Resources>
                    <Style x:Key="ToolButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="Padding" Value="1"/>
                        <Setter Property="Margin" Value="5 0 0 0"/>
                        <Setter Property="MinWidth" Value="21"/>
                        <Setter Property="MinHeight" Value="21"/>                        
                        <Setter Property="Height" Value="21"/>                       
                        <Setter Property="Background" Value="Transparent"/>                        
                        <Setter Property="BorderBrush" Value="Transparent"/>
                    </Style>
                    <Style x:Key="ToolTooggle" TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                        <Setter Property="Padding" Value="1"/>
                        <Setter Property="Margin" Value="5 0 0 0"/>
                        <Setter Property="MinWidth" Value="16"/>
                        <Setter Property="MinHeight" Value="16"/>
                        <Setter Property="Width" Value="40"/>
                        <Setter Property="Height" Value="21"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                    </Style>                    
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="auto"/>                   
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0" ClipToBounds="False" Visibility="Collapsed">
                    <componentBreadcrumbs:BreadcrumbsView DataContext="{Binding Breadcrumbs}" Margin="7 0 0 0"/>
                </Grid>

                <StackPanel Orientation="Horizontal" Grid.Column="1" Background="{DynamicResource StatusBar.Background}">
                    <TextBlock Text="{Binding MouseStatus}" Margin="0 0 2 0" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" ToolTip="Mouse cursor position in the Revit Model Coordinates (imperial), &#x0a;&#x0a; it does not work when a direction of a Revit view is not aligned with any of directions of a Revit model" HorizontalAlignment="Left"  VerticalAlignment="Center" Visibility="{Binding IsNewVerAvailable, Converter={StaticResource BoolToVisibilityConverterCollapsedInverted}}"/>

                    <ToggleButton Style="{StaticResource ToolTooggle}" IsChecked="{Binding IsBoundingBoxVisualizerEnabled}" Padding="0" Background="red"  ToolTip="Show visualization for the selected object in the Tree">
                        <Grid Background="#FEFCF7" Height="19" Width="38" >
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <TextBlock Text="V" Foreground="#1434CB"  FontWeight="Heavy" FontFamily="Arial" FontSize="15"/>
                                <Grid>
                                    <TextBlock Text=":on "  Visibility="{Binding IsBoundingBoxVisualizerEnabled, Converter={StaticResource BoolToVisibilityConverterHidden}}" Foreground="Black" VerticalAlignment="Bottom"/>
                                    <TextBlock Text=":off " Visibility="{Binding IsBoundingBoxVisualizerEnabled, Converter={StaticResource BoolToVisibilityConverterHiddenInverted}}" Foreground="Black" VerticalAlignment="Bottom"/>
                                </Grid>
                            </StackPanel>
                        </Grid>
                    </ToggleButton>

                    <Button Grid.Column="2" Style="{StaticResource ToolButton}" ToolTip="Open Revit Database Scripting" Click="RDSButton_Click" Background="#FFF200" >
                        <TextBlock Text="S" Foreground="#ED1A24"  FontWeight="Heavy" FontFamily="Arial" FontSize="15"/>
                    </Button>

                    <Button Grid.Column="3" Style="{StaticResource ToolButton}"  ToolTip="RDBE Configuration" Click="ConfigurationButton_Click" >
                        <Path Style="{StaticResource IconConfig}" Opacity="0.91"  />
                    </Button>
                </StackPanel>
                
                <Grid Grid.ColumnSpan="2" Background="{DynamicResource StatusBar.Background}" HorizontalAlignment="Center">
                    <TextBlock  HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsNewVerAvailable, Converter={StaticResource BoolToVisibilityConverterCollapsed}}">    
                        <Run Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}">a new version is available :</Run>
                        <Hyperlink NavigateUri="{Binding NewVersionLink}" ap:HyperlinkAP.OpenOnClick="True" Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" TextDecorations="None"  >
                            <Run Text="{Binding NewVersionLink}" />
                        </Hyperlink>
                    </TextBlock>                    
                </Grid>
            </Grid>
        </Grid>

        <GridSplitter Grid.Row="1"  Background="{DynamicResource GridSplitter.Background}" Height="3" HorizontalAlignment="Stretch" Visibility="Collapsed"/>

        <componentScripting:RDScriptingView     Grid.Row="2"   Visibility="Collapsed"/>
    </Grid>
</Window>