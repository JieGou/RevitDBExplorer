<UserControl x:Class="RevitDBExplorer.WPF.Controls.TextBoxWithPlaceholder"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:converters="clr-namespace:RevitDBExplorer.WPF.Converters"  
             xmlns:local="clr-namespace:RevitDBExplorer.WPF.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Resources/Templates/All.xaml"/>              
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>


    <Grid x:Name="cMainGrid" Background="{DynamicResource TextBox.Background}" PreviewLostKeyboardFocus="MainGrid_PreviewLostKeyboardFocus">
        <Grid.Resources>
            <converters:StringIsNotNullOrEmptyToBoolConverter x:Key="StringIsNotNullOrEmptyToBoolConverter"/>
        </Grid.Resources>
        <TextBox x:Name="cTextBox"
                 Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                 TextChanged="TextBox_TextChanged" Padding="1 2"
                 KeyDown="TextBox_KeyDown"
                 PreviewKeyDown="TextBox_PreviewKeyDown" 
                 PreviewMouseLeftButtonDown ="TextBox_MouseDown"
                 BorderThickness="0 0 0 1"
                 ContextMenu="{Binding ContextMenu, RelativeSource={RelativeSource Mode=FindAncestor,  AncestorType={x:Type UserControl}}}">
            <TextBox.Background>
                <VisualBrush AlignmentX="Left" AlignmentY="Center" Stretch="None" >
                 
                    <VisualBrush.Visual>
                        <Label Content="{Binding Placeholder}" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, Converter={StaticResource StringIsNotNullOrEmptyToBoolConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBox}}}" Value="True">
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBox}}}" Value="True">
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsOpen, ElementName=cPopup}" Value="True">
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </VisualBrush.Visual>                    
                </VisualBrush>
            </TextBox.Background>  
        </TextBox>
        <Popup x:Name="cPopup"
               AllowsTransparency="false" 
               Placement="Custom"
               IsOpen="False"              
               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
               VerticalOffset="{Binding Path=Top, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
               HorizontalOffset="{Binding Path=Left, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" 
               CustomPopupPlacementCallback="CustomPopupPlacementCallback"
               MaxHeight="400"
             
               ToolTip = "{x:Null}"
               ToolTipService.IsEnabled="False"
               FocusManager.IsFocusScope="True"
               IsHitTestVisible="False"
               >
            <Border >
                <ListBox x:Name="cListBox" 
                         SnapsToDevicePixels="True"                                                     
                         VerticalContentAlignment="Stretch"
                         HorizontalContentAlignment="Stretch"                                                    
                         KeyboardNavigation.DirectionalNavigation="Cycle" 
                         PreviewMouseDown="ListBox_PreviewMouseDown"                        
                         MinWidth="400"
                         Grid.IsSharedSizeScope="True"
                         Background="{DynamicResource TextBox.Background}"     
                         VirtualizingPanel.IsVirtualizing="True"
                         VirtualizingPanel.VirtualizationMode="Recycling"
                         VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                         VirtualizingPanel.CacheLengthUnit="Page" 
                         VirtualizingPanel.CacheLength="7,7"
                         >                   
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid  >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" SharedSizeGroup="FirstColumn" />
                                    <ColumnDefinition Width="0.6*" SharedSizeGroup="SecondColumn" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Label}" Grid.Column="0" Margin="0 0 7 0" />
                                <TextBlock Text="{Binding Description}" Grid.Column="1"/>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.GroupStyle>
                        <GroupStyle />
                    </ListBox.GroupStyle>
                </ListBox>
            </Border>
           
        </Popup>
    
    </Grid>
</UserControl>
